@page "/services"
@rendermode InteractiveServer
@using ApiService
@using ApiService.Models
@using serwis_web.Components
@using Color = MudBlazor.Color
@using Size = MudBlazor.Size
@inject ISnackbar Snackbar
@inject ApiService ApiService
@inject IDialogService DialogService

<PageTitle>Usługi</PageTitle>

<div class="services-container">
    <h2>Wybierz nową usługę</h2>

    @if (_loading)
    {
        <div class="loading-container">
            <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
            <p>Ładowanie...</p>
        </div>
    }
    else
    {
        <div class="services-tabs">
            @foreach (var typSerwisu in _typySerwisu)
            {
                <div class="tab-container">
                    <a href="/services/@typSerwisu.TypSerwisuId" class="tab-wrapper">
                        <h3>@typSerwisu.Nazwa</h3>
                        <p>@typSerwisu.Opis</p>
                        <i class="fa-solid fa-screwdriver-wrench" style="color: #4880FF"></i>
                    </a>
                </div>
            }
        </div>

        @if (!_typySerwisu.Any())
        {
            <div class="no-services">
                <p>Brak dostępnych usług. Spróbuj odświeżyć stronę lub skontaktuj się z administratorem.</p>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="LoadData">Odśwież</MudButton>
            </div>
        }
    }
</div>

@code {
    private List<DicTypSerwisu> _typySerwisu = new();
    private bool _loading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        _loading = true;
        StateHasChanged();
        var result = await ApiService.TypySerwisuRepo.TypySerwisuGet();
        if (result.Data != null)
        {
            _typySerwisu = result.Data;
        }
        else
        {
            Snackbar.Add("Błąd podczas pobierania danych: " + result.Error, Severity.Error);
        }
        _loading = false;
        StateHasChanged();
    }

}