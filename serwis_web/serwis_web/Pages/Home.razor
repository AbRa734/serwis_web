@page "/index"
@rendermode InteractiveServer
@using ApiService
@using ApiService.Models
@using serwis_web.Components
@inject ApiService ApiService
@inject ISnackbar Snackbar
@inject IDialogService DialogService

@if (GetUserRole() == "Klient")
{
    <PageTitle>Strona Główna</PageTitle>
    <div class="home-container">
        <h2>Strona Główna</h2>
        <HomeClient/>
    </div>

}
else if (GetUserRole() == "Serwisant")
{
    <PageTitle>Panel kontrolny</PageTitle>
    <div class="home-container">
        <h2>Panel kontrolny</h2>
        <HomeServiceman/>
        <HomeOrdersList/>
    </div>

}
else if (GetUserRole() == "Administrator")
{
    <PageTitle>Panel kontrolny</PageTitle>
    <div class="home-container">
        <h2>Panel kontrolny</h2>
        <HomeAdmin/>
        <HomeOrdersList/>
    </div>
}


@code {

    private Uzytkownik? _uzytkownik;
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            _uzytkownik = await ApiService.GetUzytkownik();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Błąd podczas pobierania danych użytkownika.", Severity.Error);
        }
    }
    
    private string GetUserRole()
    {
        if (_uzytkownik?.RolaUzytkownika == null)
            return "Brak roli";

        return _uzytkownik.RolaUzytkownika.Nazwa;
    }
    
}