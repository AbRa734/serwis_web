@using ApiService.Models
@using Color = MudBlazor.Color
@using Colors = DesignSystem.Tokens.Colors
@using DialogResult = MudBlazor.DialogResult

<style>
    .container {
        border-radius: 15px;
        box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.1), 0 1px 4px 0 rgba(0, 0, 0, 0.1);
        padding: 10px 10px 15px 10px;
    }

    .tittle {
        font-size: 24px;
        font-weight: 600
    }

    .cancel {
        background-color: #979797;
        color: #FFFFFF;
        padding: 10px 20px;
        font-size: 14px;
        transition: all 0.3s ease-in-out;
        cursor: pointer;
        text-transform: none;
        border: none;
        border-radius: 10px;
    }

    .cancel:hover {
        background-color: #858383
    }

    .save {
        background-color: #4880FF;
        color: #FFFFFF;
        padding: 10px 20px;
        font-size: 14px;
        transition: all 0.3s ease-in-out;
        cursor: pointer;
        text-transform: none;
        border: none;
        border-radius: 10px;
    }

    .save:hover {
        background-color: #336ff5;
    }

</style>

<MudDialog Class="container">
    <TitleContent>
        <MudText Class="tittle">Dodaj komentarz do usługi</MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer Style="max-height: 500px; overflow-y: scroll">
            <MudForm @ref="_form">
                <MudSelect T="int" Label="Wybierz zamówienie" @bind-Value="SelectedOrderId" Required RequiredError="Wybór zamówienia jest wymagany">
                    @foreach (var order in Orders.Where(z => z.Status.Nazwa == "Zakończony"))
                    {
                        <MudSelectItem Value="@order.ZamowienieId">Zamówienie #@order.ZamowienieId.ToString("D5")</MudSelectItem>
                    }
                </MudSelect>

                <MudTextField T="string" Label="Komentarz" @bind-Value="CommentText"
                            Required RequiredError="Komentarz jest wymagany"
                            Counter="500" MaxLength="500" Immediate="true"
                            Lines="2" Class="mt-3" />
            </MudForm>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Class="cancel">Anuluj</MudButton>
        <MudButton OnClick="Submit" Disabled="@(!IsFormValid())" Class="save">Zapisz</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = null!;
    
    [Parameter] public List<Zamowienie> Orders { get; set; } = new();
    [Parameter] public string CommentText { get; set; } = string.Empty;
    [Parameter] public int SelectedOrderId { get; set; }
    
    private MudForm _form = null!;
    
    private bool IsFormValid() => !string.IsNullOrWhiteSpace(CommentText) && SelectedOrderId > 0;
    
    private void Submit()
    {
        _form.Validate();
        if (_form.IsValid)
        {
            var result = new CommentDialogResult
            {
                OrderId = SelectedOrderId,
                Comment = CommentText
            };
            MudDialog.Close(DialogResult.Ok(result));
        }
    }
    
    private void Cancel() => MudDialog.Cancel();
    
    public class CommentDialogResult
    {
        public int OrderId { get; set; }
        public string Comment { get; set; } = null!;
    }
}